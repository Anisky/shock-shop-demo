name: Sock Shop CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io  # Change to your registry (quay.io, harbor.yourdomain.com, etc.)
  IMAGE_NAME: ${{ github.repository }}  # Uses your GitHub repo name or set a custom name
  VERSION: ${{ github.sha }} 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Clone Sock Shop repository (if not already present)
      run: |
        if [ ! -d "sock-shop" ]; then
          git clone https://github.com/Anisky/shock-shop-demo.git sock-shop
        fi
        cd sock-shop

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push front-end
      uses: docker/build-push-action@v4
      with:
        context: sock-shop/src/front-end
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/front-end:${{ env.VERSION }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/front-end:latest

    - name: Build and push cart
      uses: docker/build-push-action@v4
      with:
        context: sock-shop/src/cart
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cart:${{ env.VERSION }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/cart:latest

    - name: Build and push other services
      run: |
        cd sock-shop
        for service in catalogue currency payment shipping user queue-master; do
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$service:${{ env.VERSION }} src/$service
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$service:${{ env.VERSION }}
        done
